TODO:

	- IMPLIMENT THE ALGORITHM(Loop or Recurse or DIE)
	- Assign a zero to each left traversal and 1 to each right one
	- Store the output binary string of the tree travesrsal based on the original text
	- learn about dat files
	- Create a function to calculate compression %

DONE:
	- Start the project Repositary at github.com/karimkohel/DCW
	- Start the basic C file and configure header files
	- Configer makefile
	- Add priority Q header
	- finish priority Q
		- count character frequency in the Q
		- add plus one to each insertion in the Q
	- test with a test string
	- Add function for opening the input file
	- Add a function that reads the input file and counts the characters into priority Qs
	- Prepare characters and their freq to be organized ascendingly in a Q
	- Adjust tree node to take two data types (char and its freq.)
	- a join function in the enQ
	- Use the first two nodes in the sorted Q and join them making their parent the sum of their Freq.
	- add the parant node back in the Q (BUT IN A SORTED WAY)